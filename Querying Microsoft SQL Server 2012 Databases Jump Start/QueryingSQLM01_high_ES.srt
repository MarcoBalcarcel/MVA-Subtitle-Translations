1
00:00:00,333 --> 00:00:06,333
[Música]

2
00:00:17,433 --> 00:00:21,333
>> ¡Bien!, hola y bienvenidos, en vivo desde la sede de Microsoft aquí

3
00:00:21,416 --> 00:00:25,466
en la zona de Bellevue/Redmond/Seattle. Vamos a estar presentando

4
00:00:25,483 --> 00:00:30,350
una clase de Querying Microsoft SQL Server 2012 para ustedes hoy.

5
00:00:30,433 --> 00:00:33,466
Muchas gracias por tomarse el tiempo de unirse a nosotros. Queremos algún

6
00:00:33,483 --> 00:00:37,466
tipo de interacción para que sean capaces de darnos algún tipo de retroalimentación,

7
00:00:37,483 --> 00:00:41,333
ya que estarán viendo la presentación en las próximas

8
00:00:41,483 --> 00:00:44,466
horas, a la derecha de su pantalla hay una interfáz de chat, 

9
00:00:44,483 --> 00:00:48,416
allí puedes sentirte cómodo respondiendo o enviado algunos mensajes

10
00:00:48,483 --> 00:00:51,466
allí o para algunas conversaciones de allí. Tenemos toneladas de PYMES, expertos

11
00:00:51,483 --> 00:00:55,466
en la materia, trabajando detrás de scena con nosotros. Y mi persona,

12
00:00:55,483 --> 00:00:59,466
Brian Alderman, yo estaré presentando, nosotros también

13
00:00:59,483 --> 00:01:03,466
estaremos monitoreando las conversaciones así cómo lo estarán haciendo desde el estudio.

14
00:01:03,483 --> 00:01:06,350
Y los más interesante es que si nos pueden escribir una buena pregunta,

15
00:01:06,433 --> 00:01:09,466
nos la van a enviar y nos vamos a tomar el tiempo en vivo y

16
00:01:09,483 --> 00:01:12,466
les estaremos respondiendo. La buena noticias es que no vas a

17
00:01:12,483 --> 00:01:15,433
esucharme solo a mi todo todo el día. Tambien se unió a mi en

18
00:01:15,483 --> 00:01:17,466
el estudio Tobias. ¿Cómo estás?

19
00:01:18,483 --> 00:01:20,466
>> No está mal, Brian. Se siente bien estar aquí.

20
00:01:21,483 --> 00:01:24,300
>> Es bueno verte. Gracias por unirte a nosotros hoy. Y acerca de qué

21
00:01:24,383 --> 00:01:26,300
vamos a hablar, Quiero estar seguro de que todos entienden

22
00:01:26,383 --> 00:01:30,466
a lo que sean metido. Esto es más que una clase de nivel 300.

23
00:01:30,483 --> 00:01:32,466
Y estámos tratando de conocer a la audiencia que quiere aprender

24
00:01:32,483 --> 00:01:36,466
los conocimientos técnicos requeridos para algunas de las consultas Transact-SQL

25
00:01:37,233 --> 00:01:40,466
avanzadas dentro de SQL Server. Por lo que deben tener un conocimiento básico

26
00:01:40,483 --> 00:01:44,466
al menos de bases de datos relacionales, entender el uso de

27
00:01:44,483 --> 00:01:47,200
SSMS, o de SQL Server Management Studio, porque vamos

28
00:01:47,283 --> 00:01:50,466
a pasar mucho tiempo en ello, y entonces un conocimiento básico

29
00:01:50,483 --> 00:01:52,466
de algo del sistema operativo Microsoft Windows y algo de

30
00:01:52,483 --> 00:01:55,466
its core functionality. Let's take a look at what we're going

31
00:01:55,483 --> 00:01:58,466
to discuss throughout the day here. Or evening, depending where

32
00:01:58,483 --> 00:02:01,466
you're dialed in from. We're going to begin with just an introduction

33
00:02:01,483 --> 00:02:05,333
to SQL Server 2012. We've got a couple modules, just kind of

34
00:02:05,416 --> 00:02:07,466
levelling the playing field to make sure everyone understands

35
00:02:07,483 --> 00:02:10,466
what it is that we're going to address throughout the day, and

36
00:02:10,483 --> 00:02:13,466
some of the terms and concepts that we'll be addressing or using

37
00:02:13,200 --> 00:02:16,466
throughout the day. We'll then move into the second module and

38
00:02:16,483 --> 00:02:19,466
start looking at some of the advanced select statements, things

39
00:02:19,483 --> 00:02:23,466
like the distinct clause, the cases, the joins, the merges, filtering

40
00:02:23,483 --> 00:02:27,466
and sorting data, and how do we deal with those pesky null values.

41
00:02:28,333 --> 00:02:31,466
We'll move into data types. Because, as you know, when we build

42
00:02:31,483 --> 00:02:34,283
out new objects in SQL Server, it's very important for us to

43
00:02:34,366 --> 00:02:38,266
understand the appropriate data type and apply that data type.

44
00:02:38,350 --> 00:02:42,316
So we'll talk about that, the conversion of data types, and actually

45
00:02:42,400 --> 00:02:44,416
introduce some SQL Server functions.

46
00:02:45,166 --> 00:02:48,466
We'll then move into grouping and aggregating data. And in that

47
00:02:48,166 --> 00:02:51,466
area we'll talk about group by and having clauses. We'll talk

48
00:02:51,483 --> 00:02:55,466
about subqueries. We'll talk about different views, inline tables,

49
00:02:55,483 --> 00:03:00,166
valid functions, and derived tables. So some of the more advanced

50
00:03:00,483 --> 00:03:03,466
titles we're talking about grouping and aggregating... aggregating data.

51
00:03:03,483 --> 00:03:07,466
We'll then break for lunch. We're posting up there roughly 60 minutes.

52
00:03:07,483 --> 00:03:10,466
It may be 45. It may be 60. It may be two hours. No, it won't

53
00:03:10,483 --> 00:03:13,466
be two hours, I promise. But will be a roughly 60-minute lunch

54
00:03:13,483 --> 00:03:17,466
hour, depending on what time we are, where we are in the curriculum

55
00:03:17,483 --> 00:03:21,466
as we go through today's event. We'll then move in after lunch,

56
00:03:21,483 --> 00:03:24,466
or roughly somewhere throughout the day, we're going to talk

57
00:03:24,166 --> 00:03:25,466
about set operators.

58
00:03:26,166 --> 00:03:30,300
Set operators are we're going to include Windows functions, grouping

59
00:03:30,383 --> 00:03:33,466
sets using pivot and cubes and rollups. We'll introduce those

60
00:03:33,483 --> 00:03:36,466
topics and talk about those for you. We'll talk about modifying

61
00:03:37,483 --> 00:03:39,466
data, because it's not all about retrieving data, we need to

62
00:03:39,483 --> 00:03:42,466
know how to properly insert, update, and delete content.

63
00:03:42,483 --> 00:03:45,466
And we'll look at the use of constraints, default constraints,

64
00:03:46,483 --> 00:03:49,466
triggers, to make sure that when we're adding data, we're kind

65
00:03:49,483 --> 00:03:53,466
of enforcing data integrity by setting up different defaults,

66
00:03:53,483 --> 00:03:57,466
constraints, and triggers. We'll look at programming with T-SQL, Transact-SQL.

67
00:03:57,483 --> 00:04:01,466
We'll look some of the programming elements, some error handling,

68
00:04:01,483 --> 00:04:05,466
and understanding and implementing transactions within your programming environment.

69
00:04:05,483 --> 00:04:09,433
And then we'll wrap up today's class with retrieving SQL Server

70
00:04:09,483 --> 00:04:12,466
metadata and improving SQL Server query performance. So we'll

71
00:04:13,483 --> 00:04:16,466
look at things like system catalogs, dynamic management views,

72
00:04:16,483 --> 00:04:20,466
or DMVs. We'll talk about creating and executing store procedures,

73
00:04:20,483 --> 00:04:24,183
and then an overall understanding of ways that we can improve

74
00:04:24,483 --> 00:04:27,466
the SQL Server performance specifically when we're querying.

75
00:04:27,483 --> 00:04:29,466
So that's what we're going to take a look at. We're going to

76
00:04:29,483 --> 00:04:33,333
begin, and like we said, with an introduction to Microsoft SQL Server.

77
00:04:33,416 --> 00:04:35,466
Again, feel comfortable using that chat to the right. If you

78
00:04:35,483 --> 00:04:38,466
have any great questions for us, feel free to chat in to us so

79
00:04:38,483 --> 00:04:42,183
we can get any answers... any questions answered for you as we

80
00:04:42,266 --> 00:04:45,200
have a plethora... I love using that word... a plethora of SMEs

81
00:04:45,283 --> 00:04:48,300
working behind the scenes working with us. And Tobias and I

82
00:04:48,383 --> 00:04:52,466
will also take some live questions as they come into us. So let's

83
00:04:52,233 --> 00:04:55,466
go ahead and begin with an introduction to Microsoft SQL Server.

84
00:04:55,483 --> 00:04:58,466
And this is going to be Module 1. And, again, kind of like just

85
00:04:58,483 --> 00:05:02,466
kind of laying a foundation and understanding or kind of levelling

86
00:05:02,483 --> 00:05:06,266
the playing field for people. We're just going to talk a little

87
00:05:06,350 --> 00:05:08,466
bit about some of the different types of commands and statement

88
00:05:08,483 --> 00:05:11,466
elements that we have out there, and then look at a couple basic

89
00:05:11,483 --> 00:05:14,466
select statements where we can actually go in and talk to these...

90
00:05:14,483 --> 00:05:18,466
the basic select statements that you might perform.

91
00:05:18,483 --> 00:05:22,466
So three types of commands that you can find out there. We have

92
00:05:22,483 --> 00:05:26,466
DML, or data manipulation language. And with this class being

93
00:05:26,483 --> 00:05:30,166
querying SQL Server, the primary focus is going to be on DML

94
00:05:30,483 --> 00:05:32,466
specifically the select statement, but we are... as we talked

95
00:05:32,483 --> 00:05:35,266
about, we are going to talk about the insert, the update, and

96
00:05:35,350 --> 00:05:38,466
delete commands, which falls in that data manipulation language

97
00:05:38,483 --> 00:05:42,400
category of statements. We're also going to talk about DDLs,

98
00:05:42,483 --> 00:05:45,266
how we create objects, whether it be a database or a table or

99
00:05:45,350 --> 00:05:48,466
a store procedure. And after we create we may need to modify that.

100
00:05:48,483 --> 00:05:51,466
We'll talk about ways to alter that. And eventually we may have

101
00:05:51,483 --> 00:05:55,466
a reason to drop that. Now, my goal is to change that drop command

102
00:05:55,483 --> 00:05:58,466
to the toast command. So I'm trying to get Microsoft to change

103
00:05:58,483 --> 00:06:01,466
that from drop to toast. I'm going to be working with Tobias

104
00:06:01,233 --> 00:06:04,466
on trying to get that toast command in there instead of the drop command.

105
00:06:05,166 --> 00:06:07,466
Is there any way we can get that done by the end of the class?

106
00:06:07,483 --> 00:06:08,466
>> No.

107
00:06:08,483 --> 00:06:11,466
>> No. Okay. I'll keep working on that. I'm not going to take

108
00:06:11,483 --> 00:06:15,333
no as an answer yet. So if you all are in favor of having a toast

109
00:06:15,483 --> 00:06:18,166
command instead of a drop command, please let us know about that,

110
00:06:18,250 --> 00:06:22,466
and I think we'll see maybe if we get enough heat on the development

111
00:06:23,333 --> 00:06:25,466
team in SQL you get a toast command added for the next version.

112
00:06:25,483 --> 00:06:29,466
>> I have been trying to tell Brian about this NC standard thing

113
00:06:29,483 --> 00:06:34,466
we have going and trying to stay close to standards, and apparently

114
00:06:34,483 --> 00:06:37,466
they just haven't come to toast command just yet.

115
00:06:37,483 --> 00:06:40,466
>> Well, I think you could be setting... you could be setting

116
00:06:40,483 --> 00:06:44,466
up new ground for people. Maybe everyone would change to the

117
00:06:44,483 --> 00:06:46,466
toast command from the drop command. It's a cool command.

118
00:06:46,483 --> 00:06:49,466
We're going to use toast a lot today. Unfortunately I've got

119
00:06:49,483 --> 00:06:52,466
to type in drop, but when I type in drop, just think I'm thinking

120
00:06:52,483 --> 00:06:53,466
toast when I'm typing that in.

121
00:06:53,483 --> 00:06:54,466
>> No, no.

122
00:06:54,483 --> 00:06:57,466
>> But there's not a drop command... there's not a toast command.

123
00:06:57,483 --> 00:07:00,166
All right. We're also going to talk about data control statements.

124
00:07:00,250 --> 00:07:03,466
Those are where we control access to the different objects within

125
00:07:03,483 --> 00:07:08,466
the SQL Server databases. So those are DCL commands. We'll touch

126
00:07:08,183 --> 00:07:11,316
on those as well. So three different categories of commands that

127
00:07:11,400 --> 00:07:11,466
we'll be using.

128
00:07:12,483 --> 00:07:17,466
DML, DDL, and DCL. Now, we have some T-SQL language elements

129
00:07:17,483 --> 00:07:19,466
that we're going to be using, we're going to drill into a little

130
00:07:19,483 --> 00:07:22,466
bit more detail. I'm going to introduce them and then let Tobias

131
00:07:22,483 --> 00:07:24,466
kind of just talk a little bit, a little bit more about these.

132
00:07:24,483 --> 00:07:27,466
But we have what are called predicates and operators that we

133
00:07:27,483 --> 00:07:30,466
use when we're writing T-SQL commands, different functions that

134
00:07:30,483 --> 00:07:33,466
we can call. We may want to reuse something like a store procedure,

135
00:07:33,483 --> 00:07:37,166
so we may want to pass variables. We have different expressions

136
00:07:37,483 --> 00:07:41,450
that we'll be able to use, ways to have a batch job and we can

137
00:07:41,483 --> 00:07:44,466
supply separators in for that. We want to maybe control the flow

138
00:07:44,483 --> 00:07:48,466
so we could use things like an if/else statement. And then of

139
00:07:48,483 --> 00:07:51,266
course we want to comment because we're always good about commenting

140
00:07:51,350 --> 00:07:53,466
content, so we want to make sure we can add comments. And we're

141
00:07:53,483 --> 00:07:57,466
going to show you how we add comments to this content. So I'm

142
00:07:57,483 --> 00:08:01,466
going to ask Tobias to kind of walk us through some of these

143
00:08:02,383 --> 00:08:04,466
elements that we can use when we're working with T-SQL.

144
00:08:06,483 --> 00:08:07,466
>> Thank you, Brian. Sure.

145
00:08:07,483 --> 00:08:13,400
So what you're seeing there is kind of the standard things you

146
00:08:13,483 --> 00:08:15,466
would imagine in any programming language, right?

147
00:08:16,483 --> 00:08:22,466
We have predicates. That includes the common operators, the common

148
00:08:22,483 --> 00:08:25,466
comparison operators including like, which is a special string

149
00:08:25,483 --> 00:08:30,433
kind of operator. We have three logical operators in not, and,

150
00:08:30,450 --> 00:08:30,466
and or.

151
00:08:31,483 --> 00:08:36,0
And we dig into how you use all of these as we go through the class.

152
00:08:36,483 --> 00:08:38,466
And I think one thing that's interesting for us to kind of focus

153
00:08:38,483 --> 00:08:45,233
on is what's best practices, how should you use the language,

154
00:08:45,316 --> 00:08:49,466
what should you think about and what may you want to avoid for

155
00:08:49,483 --> 00:08:52,466
various reasons. It's all very context sensitive. Right?

156
00:08:52,483 --> 00:08:56,466
So using the right thing at the right moment is clearly going

157
00:08:56,483 --> 00:08:57,383
to help you.

158
00:08:58,483 --> 00:09:01,466
>> All right. So those are the predicates. Now, also we have functions.

159
00:09:01,483 --> 00:09:04,0
You see we have three categories of functions. We have string

160
00:09:04,483 --> 00:09:07,466
functions, something like if you want to extract a portion of

161
00:09:07,483 --> 00:09:10,466
a string or we want to look at the length of a string. We have

162
00:09:11,483 --> 00:09:13,466
date and time functions. We want to go out and grab the system

163
00:09:13,483 --> 00:09:18,333
date, we want to maybe check and add a certain time frame to

164
00:09:18,483 --> 00:09:21,200
a day. And then we have aggregate functions. We want the average

165
00:09:21,283 --> 00:09:26,466
sale for a particular salesperson or the total sales for a particular salesperson.

166
00:09:26,483 --> 00:09:30,466
Those fall under the aggregate functions. So we can use these functions.

167
00:09:30,483 --> 00:09:33,466
And, again, we'll see these as we go out throughout today's presentation.

168
00:09:34,0 --> 00:09:37,466
And we'll see these actually in use. Now, the idea of using

169
00:09:38,166 --> 00:09:41,466
variables is very powerful because this gives us the opportunity

170
00:09:41,483 --> 00:09:45,233
to reuse items like store procedures that we've created and be

171
00:09:45,316 --> 00:09:48,466
able to pass different variables or different values with these variables.

172
00:09:48,483 --> 00:09:52,183
So we'll see how we can declare a variable. Very straightforward.

173
00:09:52,466 --> 00:09:55,466
And we can also now not only declare it but we can also initialize

174
00:09:56,166 --> 00:09:59,233
at the same time beginning with SQL Server 2008, in fact.

175
00:09:59,316 --> 00:10:01,466
So we'll talk about the use of variables and how powerful they

176
00:10:02,166 --> 00:10:04,466
can be to make it a little bit more flexible and dynamic, for

177
00:10:05,483 --> 00:10:08,200
instance, store procedure, if we're trying to use that. We have

178
00:10:08,283 --> 00:10:11,466
some expressions here. Like we're doing a select, a year, the

179
00:10:11,483 --> 00:10:15,466
order date plus 1, we have select order quantity times unit price.

180
00:10:15,183 --> 00:10:17,466
So we can get very creative with our select statements. We don't

181
00:10:17,483 --> 00:10:21,333
have to just do select asterisk from a table name and walk away.

182
00:10:21,416 --> 00:10:24,466
We can actually go in and get creative and kind of customize

183
00:10:24,483 --> 00:10:26,466
that result set. And we're going to look at some of the opportunities

184
00:10:26,483 --> 00:10:30,0
we have for the customization of that result set by using some

185
00:10:30,483 --> 00:10:33,333
of these expressions that we have available to us. And the use

186
00:10:33,416 --> 00:10:36,466
of batch jobs are really powerful because this allows us to be

187
00:10:36,483 --> 00:10:40,466
able to go in there and script content, and then we can schedule

188
00:10:40,233 --> 00:10:44,466
that content to run at a particular time. And if we have multiple

189
00:10:44,483 --> 00:10:48,466
statements, we may often have to separate them. We most often

190
00:10:48,483 --> 00:10:52,466
do that with the go statement. Now, go is not specific to a SQL

191
00:10:52,483 --> 00:10:56,466
Server T-SQL command. It just allows us to go out there and separate

192
00:10:57,433 --> 00:11:00,466
the different batch jobs or commands we have within a batch job.

193
00:11:00,483 --> 00:11:03,466
>> And it's important to know here with go that it's just something

194
00:11:04,483 --> 00:11:08,466
that the tool sees such as SQL Server Management Studio. It sees

195
00:11:08,483 --> 00:11:11,416
go and it knows that whatever was before go I'll send separately,

196
00:11:11,483 --> 00:11:13,466
wait for a response from the server and then I'll send the rest,

197
00:11:14,483 --> 00:11:17,466
right, and do this between the go. So SQL Server itself, like

198
00:11:17,483 --> 00:11:20,466
Brian mentioned, doesn't really know what go is. It's different

199
00:11:20,483 --> 00:11:24,166
tools may use different batch separators. But all our tools

200
00:11:24,483 --> 00:11:27,466
default to go as the batch separator.

201
00:11:28,483 --> 00:11:32,166
>> Some other elements we can use are control of flow. I'll be

202
00:11:32,483 --> 00:11:36,466
talking about this briefly. If/else, the while, begin end. Error handling.

203
00:11:36,483 --> 00:11:39,466
We're going to look at some ways to catch errors and how we're

204
00:11:39,483 --> 00:11:42,433
going to be able to respond to those errors. We'll look at those

205
00:11:42,483 --> 00:11:46,466
later on today. And, again, we'll spend some time talking about

206
00:11:46,483 --> 00:11:49,466
transactions, how to define a transaction within a batch, for

207
00:11:49,483 --> 00:11:52,466
instance, used in a begin transaction, committing that transaction,

208
00:11:52,483 --> 00:11:55,216
and potentially having to roll back that transaction.

209
00:11:55,483 --> 00:11:58,250
You're going to want to document, especially start getting into

210
00:11:58,333 --> 00:12:00,316
batch jobs, you're going to want to document what's going on

211
00:12:00,400 --> 00:12:02,466
in there. This gives you the opportunity to use what's called

212
00:12:02,483 --> 00:12:06,366
a block of commented code. This allows you to set up comments.

213
00:12:06,450 --> 00:12:08,466
As you can see we have a forward slash asterisk. Anything I

214
00:12:09,333 --> 00:12:13,466
say after that is a comment until I get the asterisk forward

215
00:12:13,483 --> 00:12:16,466
slash again. That closes that block of comments out. If you

216
00:12:16,483 --> 00:12:20,466
want just a line of comments, we can use the dash dash. And then

217
00:12:20,483 --> 00:12:23,466
you'll just... that line will not be executed. So if you're

218
00:12:23,483 --> 00:12:27,466
working on troubleshooting a particular script and there's certain

219
00:12:27,483 --> 00:12:30,416
code you don't want to run temporarily, you can kind of comment

220
00:12:30,483 --> 00:12:34,466
that out using the block of commented code or these two dashes,

221
00:12:34,183 --> 00:12:36,466
and they'll ignore that temporarily. Or if you just want to

222
00:12:36,483 --> 00:12:40,233
document what you're doing in there, you know, as the batch job

223
00:12:40,316 --> 00:12:43,466
is running, you can actually add some comments to that documentation.

224
00:12:43,483 --> 00:12:46,466
Or as documentation to that script or that batch job.

225
00:12:47,483 --> 00:12:51,183
Now, the idea of actually executing a query is pretty... if you

226
00:12:51,266 --> 00:12:54,466
understand that you got this select, you have the from, you have the...

227
00:12:54,483 --> 00:12:58,466
possibly the where, maybe the group by, maybe the order by.

228
00:12:58,483 --> 00:13:01,466
Often we look at the way it's written and we think that's the

229
00:13:01,483 --> 00:13:04,466
way it's actually executed. What we want to show you here is

230
00:13:04,483 --> 00:13:08,433
the logical order of the query being processed. So the first

231
00:13:08,483 --> 00:13:10,466
thing that's going to happen is we're going to jump out to the from.

232
00:13:10,483 --> 00:13:11,466
We're going to find out to make sure...

233
00:13:11,483 --> 00:13:15,466
>> So, Brian, just why do I care? Why is it important with the

234
00:13:15,483 --> 00:13:16,466
logical query processing?

235
00:13:16,483 --> 00:13:18,466
>> Because you want to make sure that you understand when you're

236
00:13:18,483 --> 00:13:21,216
writing this information, and if you're troubleshooting and trying

237
00:13:21,300 --> 00:13:25,466
to optimize it, if you understand the order that these options

238
00:13:25,483 --> 00:13:28,466
or these statements are being executed, it might give you the

239
00:13:28,483 --> 00:13:32,466
opportunity to optimize that and make it run a little bit faster.

240
00:13:33,183 --> 00:13:35,366
>> Yeah, that's good. And it's also... it's also important to

241
00:13:35,450 --> 00:13:39,383
know the logical query order because it helps you understand

242
00:13:39,466 --> 00:13:43,466
exactly what needs to go on under the surface, right, under the covers.

243
00:13:43,483 --> 00:13:49,0
So if you don't know exactly how the query language is structured,

244
00:13:49,483 --> 00:13:53,400
right, then you may end up not getting the results you want.

245
00:13:53,483 --> 00:13:56,466
So it's not... it doesn't mean that whatever you type is exactly

246
00:13:56,483 --> 00:14:01,466
what we are going to do, because we have this fancy query optimizer

247
00:14:01,483 --> 00:14:05,466
that figures out the right way, the best way to give you the results.

248
00:14:06,266 --> 00:14:09,466
But it does mean that we are constrained so that we will always

249
00:14:09,483 --> 00:14:12,466
logically execute in this order. So it's super important to

250
00:14:13,0 --> 00:14:15,466
understand the logical query processing.

251
00:14:15,483 --> 00:14:18,466
>> So it actually begins with the from statement and then it goes

252
00:14:18,483 --> 00:14:20,466
to the where clause. I'm just going to bring these up, you'll

253
00:14:20,483 --> 00:14:25,450
see, as they're numbered here. Group by, having, and then it

254
00:14:25,483 --> 00:14:27,466
goes to select. Oddly enough, the first thing that we write is

255
00:14:27,483 --> 00:14:31,450
the select, but that really isn't a... you know, isn't addressed until...

256
00:14:31,483 --> 00:14:35,300
well, going to call it step 5. And if there's an order by, that's

257
00:14:35,383 --> 00:14:39,466
executed last. So, you know, it's good to understand that order,

258
00:14:39,233 --> 00:14:41,466
that processing order so when you're writing your queries or

259
00:14:41,483 --> 00:14:44,333
if you're trying to optimize your queries, you can see where

260
00:14:44,416 --> 00:14:45,466
that information is coming from.

261
00:14:45,483 --> 00:14:49,466
>> And we get into some more details on logical query processing

262
00:14:49,483 --> 00:14:53,450
later, because there are some other elements to the language

263
00:14:53,483 --> 00:14:56,466
that are in addition to what we're showing on this slide.

264
00:14:58,433 --> 00:15:00,466
>> So this is applying the logical order of operations here.

265
00:15:01,166 --> 00:15:03,466
We've got this statement here, so let's start from the top, use

266
00:15:03,483 --> 00:15:06,466
adventure works. We also... we identify what databases we want

267
00:15:06,483 --> 00:15:10,466
to use, and so I always begin a statement with a use so I make

268
00:15:10,483 --> 00:15:12,466
sure I'm in the appropriate database.

269
00:15:13,483 --> 00:15:14,466
Then we'll add the from.

270
00:15:15,483 --> 00:15:17,466
This is actually sales.salesorderheader.

271
00:15:18,483 --> 00:15:22,266
Where customer ID equals a certain number. Group by salesperson.

272
00:15:22,483 --> 00:15:25,466
And then we have to grab the year off the order date.

273
00:15:25,483 --> 00:15:27,466
Having count greater than 1.

274
00:15:28,483 --> 00:15:30,466
And then we execute, then we have the select portion. We're not

275
00:15:30,483 --> 00:15:33,183
going write the statement this way, but, again, this is how a

276
00:15:33,266 --> 00:15:36,466
statement that we have written will be processed by SQL Server.

277
00:15:37,333 --> 00:15:39,466
And finally wrap up with the order by.

278
00:15:39,483 --> 00:15:43,466
>> Yes. So one thing I just wanted to mention on use is we have

279
00:15:43,483 --> 00:15:46,466
two big products out there with regard to SQL, right? One is

280
00:15:46,483 --> 00:15:49,466
SQL Server 2012, which is our on-premise product, and then we

281
00:15:49,483 --> 00:15:53,466
have Windows Azure SQL database, which is our cloud offering

282
00:15:53,166 --> 00:15:57,333
in Azure. And the use statement itself is not supported in SQL

283
00:15:57,416 --> 00:16:02,300
database because of what we sell is something different from

284
00:16:02,383 --> 00:16:04,466
SQL Server. We sell databases rather than instances.

285
00:16:05,483 --> 00:16:09,466
So that's important to know. If you want to create software that

286
00:16:09,483 --> 00:16:13,466
runs nicely on both of the platforms, you should not use the

287
00:16:13,483 --> 00:16:16,466
use statement within your program. You'll very often use it

288
00:16:16,483 --> 00:16:20,466
in SQL Server for debugging or for testing your scripts, right,

289
00:16:20,483 --> 00:16:24,466
but within your software, your app that you write, you may want

290
00:16:24,483 --> 00:16:28,466
to avoid using use. The other thing that's interesting here is

291
00:16:28,483 --> 00:16:33,166
if you're interested in it working on both our Azure platform

292
00:16:33,483 --> 00:16:37,333
as well as on our on-premise platform, you should look at trying

293
00:16:37,483 --> 00:16:40,466
on both. And if you develop against Windows Azure SQL DB, you'll

294
00:16:40,483 --> 00:16:43,466
be able to run on SQL Server as well.

295
00:16:44,0 --> 00:16:47,466
>> Are you suggesting they should test the code before they deploy it?

296
00:16:47,483 --> 00:16:48,466
>> No, no, no.

297
00:16:48,483 --> 00:16:50,466
>> Really. Okay. Because I didn't know we were supposed to do that.

298
00:16:50,483 --> 00:16:54,333
So all right. All right. Let's take a look at some basic select

299
00:16:54,416 --> 00:16:58,466
statements again. Some of these are more advanced and might be

300
00:16:58,216 --> 00:17:00,466
familiar with this, but we just want to make sure everyone's

301
00:17:00,483 --> 00:17:03,466
on the same page here. So we have a select, we supply the select

302
00:17:03,483 --> 00:17:05,466
list, the from, the where, the group by, the order by.

303
00:17:05,483 --> 00:17:07,466
We're going to see plenty of these.

304
00:17:08,416 --> 00:17:10,466
Here's where we're looking at retrieving call in from a group.

305
00:17:10,483 --> 00:17:14,466
We can actually just use select customer ID, store ID from the sales.customer.

306
00:17:14,483 --> 00:17:19,466
So we're identifying the object in the schema for that object.

307
00:17:19,483 --> 00:17:21,466
So that's about as basic as you can get. Well, you can get a

308
00:17:21,483 --> 00:17:24,466
little bit more basic. Instead of identifying the columns, you

309
00:17:24,483 --> 00:17:26,466
could swap out the column names and put a asterisk in there.

310
00:17:26,483 --> 00:17:28,466
That's the most basic select statement you can write.

311
00:17:28,483 --> 00:17:31,466
Select asterisk from table name. We're actually taking it up

312
00:17:31,483 --> 00:17:32,466
a notch...

313
00:17:32,483 --> 00:17:33,166
>> We can make it easier.

314
00:17:33,250 --> 00:17:34,366
>> Make it easier than that?

315
00:17:34,450 --> 00:17:36,200
>> Yeah. Select space 1.

316
00:17:36,283 --> 00:17:37,466
>> Select space 1. That's...

317
00:17:37,483 --> 00:17:39,466
>> That's probably the easiest you can go.

318
00:17:39,483 --> 00:17:43,466
>> Okay. Well, okay. So try that. If you want the easiest statement

319
00:17:43,483 --> 00:17:46,466
so you can actually go out and brag that you've actually submitted

320
00:17:46,483 --> 00:17:50,366
and executed a select statement... what is it, select space 1.

321
00:17:50,450 --> 00:17:53,283
>> And it's actually not... it sounds like trivial and stupid

322
00:17:53,366 --> 00:17:55,466
and why would you ever do that, right, but it's actually interesting

323
00:17:55,483 --> 00:17:58,466
when you want to do performance tuning, if you're interested

324
00:17:58,483 --> 00:18:02,466
in what is the performance of just speaking to SQL Server, like

325
00:18:02,483 --> 00:18:06,233
network, all of these things, rather than going into what actually

326
00:18:06,316 --> 00:18:10,466
happens in the database engine, select 1 is a perfect thing to test.

327
00:18:10,483 --> 00:18:12,466
>> Awesome. Definitely. Select 1.

328
00:18:13,433 --> 00:18:15,466
All right. Using calculations. So as you can see here, we've

329
00:18:15,483 --> 00:18:18,466
select unit price order quantity and then we're performing a

330
00:18:19,483 --> 00:18:21,466
calculation unit price times order quantity and we're going to

331
00:18:21,483 --> 00:18:25,466
grab this from the sales order detail table. So we can actually

332
00:18:25,483 --> 00:18:28,466
use this. And we have different calculations. Right now we're

333
00:18:28,483 --> 00:18:31,466
doing a multiplication here. But we can do an addition, we can

334
00:18:31,483 --> 00:18:35,166
do division, we do percentages. So we have these different calculations,

335
00:18:35,450 --> 00:18:38,433
scalar calculations that are available to us. We can also do

336
00:18:38,483 --> 00:18:40,466
a concatenate. We can concatenate content. Again, we're going

337
00:18:40,483 --> 00:18:43,466
to see some samples of these. We're just kind of introducing

338
00:18:43,483 --> 00:18:45,466
some of the topics that we're going to go through here.

339
00:18:46,483 --> 00:18:49,350
All right. Let's take a look at some basic statements here.

340
00:18:50,250 --> 00:18:52,466
So I'll come out of the

341
00:18:54,266 --> 00:18:58,0
PowerPoint slide and jump into an image here, then

342
00:18:59,483 --> 00:19:02,466
go into SQL Management Studio. And again we've got adventure

343
00:19:02,483 --> 00:19:05,466
works and we're already using adventure works. So we can do

344
00:19:05,483 --> 00:19:06,466
a select again.

345
00:19:06,483 --> 00:19:07,466
>> 1, 1, 1.

346
00:19:07,483 --> 00:19:09,466
>> 1. I'm going to do that one first just so everyone sees that

347
00:19:09,483 --> 00:19:12,466
this works. And the cool thing, if you're not familiar with this,

348
00:19:12,483 --> 00:19:14,466
you can highlight this and just execute it.

349
00:19:15,466 --> 00:19:18,433
And you got no column name but you get the one returned. So as

350
00:19:18,483 --> 00:19:21,466
you've said, Tobias, we've gone out, we've communicated with

351
00:19:21,483 --> 00:19:25,466
SQL Server, we've got a response. So we know that things are working.

352
00:19:25,483 --> 00:19:29,466
We're able to communicate. Now, you can also take it up a notch

353
00:19:29,483 --> 00:19:32,466
and go and select asterisk from we'll say sales...

354
00:19:33,483 --> 00:19:37,416
sales... and the cool thing with intelli-sense because I couldn't

355
00:19:37,483 --> 00:19:39,466
remember exactly what I wanted to go to, we can go to sales or

356
00:19:40,333 --> 00:19:43,466
table, order header, and then we can... again, we'll highlight

357
00:19:44,333 --> 00:19:46,466
that and execute just that command.

358
00:19:47,250 --> 00:19:49,466
And now it gives us a bunch of information here. Probably too

359
00:19:49,483 --> 00:19:52,466
much because now I've got every row and I really didn't want

360
00:19:52,483 --> 00:19:55,466
every row of... or every column, excuse me. I wanted just a

361
00:19:55,483 --> 00:19:58,466
few items about the rows in here. So we can change this again

362
00:19:59,0 --> 00:20:02,466
to do a select. We'll grab sales order ID.

363
00:20:04,483 --> 00:20:05,466
Let's actually do sales...

364
00:20:06,216 --> 00:20:07,466
we'll do it... spell it out all the way.

365
00:20:09,483 --> 00:20:11,466
And we'll grab one more.

366
00:20:12,483 --> 00:20:16,466
We'll grab due date just so we stay with it here.

367
00:20:19,483 --> 00:20:22,466
Due date. And then we'll specify here

368
00:20:24,216 --> 00:20:28,466
from the sales.salesorderheader and I'm going to double click

369
00:20:28,483 --> 00:20:32,466
here, save a few keystrokes. So we'll again highlight that and

370
00:20:32,483 --> 00:20:33,466
execute that.

371
00:20:33,483 --> 00:20:34,366
>> As sales.

372
00:20:35,200 --> 00:20:36,333
>> I'm sorry?

373
00:20:36,483 --> 00:20:41,466
>> You'd have to says as sales for... you can try.

374
00:20:41,483 --> 00:20:42,466
>> I didn't hear what you said. Sorry.

375
00:20:43,0 --> 00:20:45,466
>> You have to specify the table alias since you added it...

376
00:20:45,483 --> 00:20:47,466
you're using sales dot.

377
00:20:47,216 --> 00:20:48,466
>> Oh as sales. Gotcha.

378
00:20:49,483 --> 00:20:50,166
>> Since you added that.

379
00:20:51,483 --> 00:20:54,466
>> From sales.sales.duedate, sales.orderheader.

380
00:20:55,483 --> 00:20:59,183
As sales... didn't really want to do that this early, but we'll

381
00:20:59,266 --> 00:21:00,350
do it anyways.

382
00:21:01,283 --> 00:21:04,466
There we go. Execute that. There. So now we've set up different...

383
00:21:04,483 --> 00:21:07,250
so we've got our sales order ID and our due date set there.

384
00:21:08,350 --> 00:21:11,183
All right. So then we've added that. Now we can... so let's...

385
00:21:11,266 --> 00:21:12,466
we're seeing all the rows.

386
00:21:13,383 --> 00:21:16,166
Let's see if we can control the number of rows being returned.

387
00:21:16,483 --> 00:21:17,466
How do we do that?

388
00:21:17,483 --> 00:21:19,466
We do that with a request clause. So we're going to do...

389
00:21:19,483 --> 00:21:22,466
again, we'll do... I'm going to reuse this. What am I going

390
00:21:22,483 --> 00:21:24,466
to do here? I'm going to go up and I'm just going to throw a

391
00:21:24,483 --> 00:21:27,466
where in, where we'll say sales

392
00:21:31,483 --> 00:21:35,466
order ID is equal or less than or equal to

393
00:21:36,483 --> 00:21:38,466
we'll say 45,000.

394
00:21:40,483 --> 00:21:42,466
Let's do... this's looks pretty... let's do 44.

395
00:21:44,483 --> 00:21:47,233
So now we're eliminating the number of rows. We eliminated the

396
00:21:47,316 --> 00:21:49,466
number of columns. Now we're eliminating the number of rows.

397
00:21:50,483 --> 00:21:53,466
And now you see that if we jump up to messages real quick, you'll

398
00:21:53,483 --> 00:21:55,466
see that we have 342 rows.

399
00:21:56,333 --> 00:22:01,466
Now, if we ran this without the where clause as we did before

400
00:22:01,483 --> 00:22:06,466
and go to messages, we had 31,465 rows. So the where clause relates...

401
00:22:06,483 --> 00:22:09,466
helps reduce the number of rows that are being returned to you

402
00:22:09,483 --> 00:22:13,466
and it's given very powerful with managing that type of content.

403
00:22:14,483 --> 00:22:17,466
So we can also, you know, just throw one more variation here.

404
00:22:17,483 --> 00:22:21,466
We can also do the order by. So we'll order by kind of...

405
00:22:21,483 --> 00:22:23,466
we'll go with sales order ID.

406
00:22:24,483 --> 00:22:25,466
>> You like the sales order ID.

407
00:22:25,483 --> 00:22:28,466
>> Yeah, it's easy. I like working with numbers better. I think

408
00:22:28,483 --> 00:22:29,266
that's what it is.

409
00:22:30,250 --> 00:22:32,466
So we're going to do that. We're going to execute that and now

410
00:22:32,483 --> 00:22:35,466
it orders it or it sorts it by order ID.

411
00:22:36,483 --> 00:22:39,466
All right. So just a few basic select statements that kind of

412
00:22:39,483 --> 00:22:44,283
get your feet wet regarding performing select statements inside

413
00:22:44,366 --> 00:22:48,383
of SQL Server and try to get you comfortable with the idea we

414
00:22:48,466 --> 00:22:52,466
can use... we're going to be spending time in SSMS in that we

415
00:22:52,483 --> 00:22:55,216
can highlight whatever we want to execute and we can build on

416
00:22:55,300 --> 00:22:57,466
our commands as we're entering these commands in.

417
00:22:58,483 --> 00:23:00,433
All right. Back into PowerPoint here.

418
00:23:01,483 --> 00:23:07,183
What did I do with my slides here? Over here? I thought I already

419
00:23:07,266 --> 00:23:08,466
opened somewhere. Here it is.

420
00:23:11,483 --> 00:23:14,466
All right. So that's just a quick demo on writing basic select statements.

421
00:23:14,483 --> 00:23:17,466
Just to review, we introduced the three different types of commands,

422
00:23:17,483 --> 00:23:21,466
DMLs, DCLs, DDLs. We'll be working with these throughout the day.

423
00:23:21,483 --> 00:23:24,466
We talked about different elements like predicates and operators,

424
00:23:25,0 --> 00:23:29,383
functions, variables, commenting, control of flow. And, again,

425
00:23:29,466 --> 00:23:31,466
we're going to drill into this in more detail. We looked at

426
00:23:31,483 --> 00:23:35,266
the different elements and how they are processed. We began

427
00:23:35,350 --> 00:23:39,283
with the from, the where, the group by, the having, the select,

428
00:23:39,366 --> 00:23:41,466
and then the order by. That's the order that they're actually

429
00:23:41,483 --> 00:23:45,466
processed when you're executing a select statement. So that's

430
00:23:45,483 --> 00:23:48,466
going to just wrap up the very first section where we're going

431
00:23:48,483 --> 00:23:52,466
to come in and we're going to do information or provide information

432
00:23:52,483 --> 00:23:58,466
on the basic elements of what we're doing with SQL Server.

